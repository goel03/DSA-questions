 int widthOfBinaryTree(TreeNode* root) {
        queue<pair<TreeNode* , int>>q;
        q.push({root , 0 });
        long long result = 0;
        while(!q.empty())
        {
           int size = q.size();
           long long levelMin = q.front().second;
           long long left , right;
           
           for(int i = 0; i < size; i++)
           {
               long long curr_value = q.front().second - levelMin;
               TreeNode* temp = q.front().first;
               q.pop();

               if(i == 0) 
               left = curr_value;
               if(i == size-1)
               right = curr_value;

               if(temp->left)
               q.push({temp->left , curr_value*2 + 1});
               if(temp->right)
               q.push({temp->right , curr_value*2 + 2});
           }

           result = max(result , right - left + 1);
        }
       return result;
    }
