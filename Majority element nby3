vector<int> majorityElement(vector<int> v) {
	int c1=0;
	int c2=0;
	int n =v.size();
	int el1=INT_MIN;
	int el2=INT_MIN;
	for(int i=0;i<n;i++)
	{
		if(c1==0&&v[i]!=el2)
		{
			c1=1;
			el1=v[i];
		}
		else if(c2==0&& v[i]!=el1)
		{
			c2=1;
			el2=v[i];
		}
		else if(el1==v[i])
		c1++;
		else if(el2==v[i])
		{
			c2++;
		}
		else{
			c1--;
			c2--;
		}
	}


	vector<int> ls; 

   
    int cnt1 = 0,cnt2 = 0;
    for (int i = 0; i < n; i++) {
        if (v[i] == el1) cnt1++;
        if (v[i] == el2) cnt2++;
    }

    int mini = int(n / 3) + 1;
    if (cnt1 >= mini) ls.push_back(el1);
    if (cnt2 >= mini) ls.push_back(el2);

    // Uncomment the following line
    // if it is told to sort the answer array:
    // sort(ls.begin(), ls.end()); //TC --> O(2*log2) ~ O(1);

    return ls;
}
